#!/usr/bin/env groovy
pipeline{
agent any
parameters {
        string(name: 'branchA', defaultValue: 'master', description: 'Comapare which branch?')

        string(name: 'branchB', defaultValue: 'dev', description: 'Compare with which branch?')
    }
stages 
{
stage('Build') 
{
steps{
    // sh 'rm -r jenkins'
    // sh 'rm -r example'
    // sh 'git clone https://github.com/DialgicMew/jenkins.git'
    // sh 'git clone https://github.com/DialgicMew/example.git'
    // sh 'ls'
   
    // sh 'cd jenkins'
    // sh 'git config remote.origin.url https://github.com/DialgicMew/jenkins.git' 
    // echo "Comparing Branches"
    // sh 'ls'
    // sh "git diff --name-only remotes/origin/${params.branchA} remotes/origin/${params.branchB}"  
    // sh 'cd ..'
    // sh 'cd example'
    // sh 'git config remote.origin.url https://github.com/DialgicMew/example.git' 
    // sh 'ls'
    // echo "Comparing Branches"
    // sh "git diff --name-only remotes/origin/${params.branchA} remotes/origin/${params.branchB}" 
 checkout([$class: 'GitSCM',
 branches: [[name: '*/master']],
 doGenerateSubmoduleConfigurations: false,
 extensions: [[$class: 'CleanBeforeCheckout']],
 submoduleCfg: [],
 userRemoteConfigs:  [[credentialsId: 'gitCreds', url: "https://github.com/DialgicMew/jenkins.git"]]])
 sh 'ls'
//  sh 'cd jenkins'
//  sh 'ls'
    
    
}
}
stage('Test') 
{
steps{
echo "Testing"
}
}
stage('Deploy') 
{
steps{
echo "Deploying"
}
}
}
}
